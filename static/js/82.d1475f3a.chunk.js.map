{"version":3,"file":"static/js/82.d1475f3a.chunk.js","mappings":"+OACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAuG,8BAAvG,EAAkJ,gCAAlJ,EAA4L,6B,UCD/KA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAIpBC,EAAY,SAAAL,GAAK,OAAIA,EAAMM,OAAOA,MAAjB,E,SCCjBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXZ,GAAQa,EAAAA,EAAAA,IAAYhB,GAwB1B,OACE,kBAAMiB,UAAWC,EAAUC,SAbJ,SAAAC,GACvBA,EAAEC,kBAEiE,KADhD,OAAOlB,GACRmB,WAAU,SAAAC,GAAO,OAAIb,IAASa,EAAQb,IAArB,IACjCc,MAAM,GAAD,OAAId,EAAJ,6BAELI,GAASW,EAAAA,EAAAA,IAAW,CAAEf,KAAAA,EAAME,OAAAA,KAE9BD,EAAQ,IACRE,EAAU,GACX,EAGC,WACE,mBAAOI,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXQ,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZC,MAAOrB,EACPsB,SAnCiB,SAAAZ,GACvB,IAAQW,EAAUX,EAAEa,OAAZF,MACRpB,EAAQoB,EACT,QAmCG,mBAAOd,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXQ,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZC,MAAOnB,EACPoB,SA5CmB,SAAAZ,GACzB,IAAQW,EAAUX,EAAEa,OAAZF,MACRlB,EAAUkB,EACX,QA4CG,mBAAQd,UAAWC,EAAaQ,KAAK,SAArC,2BAKL,ECrED,GAAgB,mBAAqB,wCAAwC,YAAc,kCCc9EQ,EAAc,WACzB,IAEMC,EAbmB,SAACjC,EAAUK,GACpC,OAAKA,EAGIL,EAASK,QAAO,SAAAgB,GACrB,OAAOA,EAAQb,KAAK0B,cAAcC,SAAS9B,EAAO6B,cACnD,IAJMlC,CAMV,CAKyBoC,EAFPtB,EAAAA,EAAAA,IAAYhB,IACdgB,EAAAA,EAAAA,IAAYV,IAGrBQ,GAAWC,EAAAA,EAAAA,MAGjB,OACE,gBAAKE,UAAWC,EAAAA,kBAAhB,UACE,eAAID,UAAWC,EAAAA,YAAf,SACGiB,EAAgBI,KAAI,SAAChB,EAASiB,GAAV,OACnB,gBAAavB,UAAWC,EAAAA,gBAAxB,UACGK,EAAQb,KADX,KACmBa,EAAQX,QACzB,mBACEc,KAAK,SACLT,UAAWC,EAAAA,mBACXuB,QAAS,kBAXA,SAAAD,GAAE,OAAI1B,GAAS4B,EAAAA,EAAAA,IAAWF,GAAxB,CAWIG,CAAapB,EAAQiB,GAA3B,EAHX,sBAFOA,EADU,OAe5B,ECxCD,EAA6B,2BAA7B,EAAsE,4B,UCIzDI,EAAS,WACpB,IAAM9B,GAAWC,EAAAA,EAAAA,MACXR,GAASS,EAAAA,EAAAA,IAAYV,GAM3B,OACE,4BACE,kBAAOW,UAAWC,EAAlB,qCACA,kBACED,UAAWC,EACXQ,KAAK,OACLhB,KAAK,SACLoB,YAAY,eACZC,MAAOxB,EACPyB,SAbe,SAAAZ,GACnBN,GAAS+B,EAAAA,EAAAA,GAAUzB,EAAEa,OAAOF,OAC7B,MAeF,ECjBc,SAASe,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXV,GAAYW,EAAAA,EAAAA,IAAYZ,GAM9B,OAJA2C,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,4CAEF,SAACN,EAAD,KACA,yBAAMH,GAAa,4BACnB,SAACuC,EAAD,KACA,SAACV,EAAD,QAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","findIndex","contact","alert","addContact","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}